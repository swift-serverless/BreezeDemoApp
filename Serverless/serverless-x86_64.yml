service: swift-breeze-rest-form-api
frameworkVersion: '3'
configValidationMode: warn
useDotenv: false
provider:
  name: aws
  region: eu-west-2
  disableRollback: false
  runtime: provided
  httpApi:
    payload: '2.0'
    cors: false
    authorizers:
      appleJWT:
        issuerUrl: https://appleid.apple.com
        audience:
        - com.andreascuderi.BreezeDemoApp # <- Update this with your app bundle identifier
        type: jwt
        identitySource: $request.header.Authorization
  architecture: x86_64
  environment:
    DYNAMO_DB_KEY: ${self:custom.keyName}
    DYNAMO_DB_TABLE_NAME: ${self:custom.tableName}
  versionFunctions: true
  iam:
    role:
      statements:
      - Effect: Allow
        Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
        Resource: '*'
      - Effect: Allow
        Action:
        - dynamodb:UpdateItem
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:DeleteItem
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:DescribeTable
        Resource:
        - Fn::GetAtt:
          - FormAPITable
          - Arn
package:
  artifact: build/FormAPI/FormAPI.zip
custom:
  tableName: forms-table-${sls:stage}
  keyName: formKey
functions:
  readFormAPI:
    handler: read
    memorySize: 256
    description: '[${sls:stage}] get /forms/{formKey}'
    events:
    - httpApi:
        path: /forms/{formKey}
        method: get
        authorizer:
          name: appleJWT
  deleteFormAPI:
    handler: delete
    memorySize: 256
    description: '[${sls:stage}] delete /forms/{formKey}'
    events:
    - httpApi:
        path: /forms/{formKey}
        method: delete
        authorizer:
          name: appleJWT
  createFormAPI:
    handler: create
    memorySize: 256
    description: '[${sls:stage}] post /forms'
    events:
    - httpApi:
        path: /forms
        method: post
        authorizer:
          name: appleJWT
  updateFormAPI:
    handler: update
    memorySize: 256
    description: '[${sls:stage}] put /forms'
    events:
    - httpApi:
        path: /forms
        method: put
        authorizer:
          name: appleJWT
  listFormAPI:
    handler: list
    memorySize: 256
    description: '[${sls:stage}] get /forms'
    events:
    - httpApi:
        path: /forms
        method: get
        authorizer:
          name: appleJWT
resources:
  Resources:
    FormAPITable:
      Properties:
        AttributeDefinitions:
        - AttributeType: S
          AttributeName: ${self:custom.keyName}
        KeySchema:
        - AttributeName: ${self:custom.keyName}
          KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
      Type: AWS::DynamoDB::Table
